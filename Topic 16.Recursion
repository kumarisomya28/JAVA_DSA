Q1) Print numbers from n to 1(Decreasing order).
public class Recursion {

    public static void printDec(int n){
        if(n==1) {
            System.out.println(n);
            return;
        }
        System.out.print(n+ " ");
        printDec(n-1);
    }
    public static void main(String[] args) {
        int n=10;
        printDec(n);
}
  }

Q2 Print number in increasing order (1 to n).

 public static void printinc(int n){
        if(n==1){
            System.out.print(n+" ");
            return;
        }
       printinc(n-1);
        System.out.print(n+" ");
    }
     public static void main(String[] args) {
       int n = 10;
       printinc(n);
    }

Q3) Print factorial of a number n.

    public static int fact(int n){
        if(n ==0){
            return 1;
        }
        int fnm1 =fact(n-1);
        int fn= n* fact(n-1);
        return fn;
    }
    public static void main(String[] args) {
        int n=5;
        System.out.println(fact(n));

    }

Q4) print Nth fibonacci number .


public static int fib(int n){
        if (n==0 || n== 1){
            return n;
        }
        int f1 = fib(n-1);
        int f2 = fib(n-2);
        int fn = fib(n-1)+fib(n-2);
        return fn;
    }


    public static void main(String[] args) {
       int n = 10;
        System.out.println(fib(n));

    }

Q5) Check if the array is sorted or not.


 public static boolean isSorted(int arr[], int i){
       if(i ==arr.length-1){
           return true;
       }
       if(arr[i] > arr[i+1]){
           return false;
       }
       return isSorted(arr,i+1);
   }
  public static void main(String[] args) {
      int arr[]= {1,2,3, 7,4,5};
        System.out.println(isSorted(arr, 0));


    }
