Q1). if Statement.
public static void main(String[] args) {
        if(20>18){
            System.out.println("20 is greater than 18");
        }
}

Q2). print "pass" if input marks is greater than 80.
     public static void main(String[] args) {
        Scanner Sc =new Scanner (System.in);
        System.out.println("Enter the marks:");
        int marks=Sc.nextInt();
        if(marks>80){
            System.out.println("pass");
        }


    }

Q3).Else Statement.
 public static void main(String[] args) {
       int time=20;
        if(time<18){
            System.out.println("Good day");

        }
        else{
            System.out.println("Good evening");
        }


    }

Q4).Print "odd" if the input value is odd,otherwise print "even".
     public static void main(String[] args) {
    Scanner Sc=new Scanner(System.in);
        System.out.println("Enter the number:");
        int num=Sc.nextInt();
        if(num%2!==0) {
          System.out.println("odd");
        }else{
           System.out.println("Even");
        }

}

Q5).Find if the input Character is 'a' or not.
     public static void main(String[] args) {
         Scanner Sc=new Scanner(System.in);
        char ch;
        System.out.println("Enter the Character:");
        ch=Sc.next().charAt(0);
        if(ch=='a') {
            System.out.println("ch is an alphabet");
        }
        else{
            System.out.println("ch is not an alphabet");

        }

}

Q6).Ternary Operator.
      public static void main(String[] args) {
        int time = 20;
        String result;
        result=(time<18)?"Good day.":"Good evening.";
        System.out.println(result);
       }


Q7).Take values of length and breadth of a rectangle from user and check if it is square or not.
         public static void main(String[] args) {
        Scanner Sc=new Scanner(System.in);
        System.out.println("length = ");
        int length=Sc.nextInt();
        System.out.println("breadth = ");
        int breadth=Sc.nextInt();
        if(length==breadth){
            System.out.println("Square");
        }
        else{
            System.out.println("Rectangle");
        }
}

Q8).Take two int values from user and print greatest among them.
       public static void main(String[] args) {
       Scanner Sc=new Scanner(System.in);
        System.out.println("num1= ");
        int num1=Sc.nextInt();
        System.out.println("num 2= ");
        int num2=Sc.nextInt();

            if(num1>num2) {
                System.out.println("num1");
            }
                else{
                System.out.println("num2");

                }
            }

Q9).Write a java program that takes a year from the user and print whether that year is a leap or not.
       public static void main(String[] args) {
         Scanner Sc=new Scanner(System.in);
        System.out.println("Input the year:");
        int year=Sc.nextInt();
        boolean x=(year%4)==0;
        boolean y=(year%100)!=0;
        boolean z=((year%100==0)&&(year%400==0));
        if(x&&(y||z)) {
            System.out.println(year + "is a leap year");
        }
        else{
            System.out.println(year+"is not a leap year");
            
        }
    }
Q10).Calculator.
   public static void main(String[] args) {
        int a=Sc.nextInt();
        int b=Sc.nextInt();
        char operator=Sc.next().charAt(0);
        switch (operator ){
            case'+':
                System.out.println(a+b);
                break;
            case'-':
                System.out.println(a-b);
                break;
            case'*':
                System.out.println(a*b);
                break;
            case'/':
                System.out.println(a/b);
                break;
            case'%':
                System.out.println(a%b);
                break;
            default:
                System.out.println("Wrong operator");


        }
    }

Q11).GRADE           SCORE
       A              80-100
       B              60-40
       C              40-60
       D               <40
Print the GRADE according to the marks obtained.

 public static void main(String[] args) {
Scanner Sc = new Scanner(System.in) ;
            int score = Sc.nextInt();
            if(score>80){
                System.out.println("A");

            }
            else if(score>60){
                System.out.println("B");

            }
            else if(score>40){
                System.out.println("C");
            }
            else{
                System.out.println("D");
            }


        }


Q12) Write a program that takes a character as input and prints 1, 0, or -1 according to the following rules.
       1, if the character is an uppercase alphabet (A - Z).
       0, if the character is a lowercase alphabet (a - z).
      -1, if the character is not an alphabet.
       
     import java.util.Scanner;
     public class AlphabetCheck {
      public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter a character: ");
        char userChar = scanner.next().charAt(0);
        if (Character.isUpperCase(userChar)) {
            System.out.println("1");
        } else if (Character.isLowerCase(userChar)) {
            System.out.println("0");
        } else {
            System.out.println("-1");
        }
       scanner.close();
    }
}


Q13) Data type refers to the type of value a variable has and the way the computer interprets it.
     Each data type has a different size. You’ve studied 5 different data types and the sizes of the data types:
Integer: 4 bytes
Long: 8 bytes
Float: 4 bytes
Double: 8 bytes
Character: 1 byte
You’re given a data type. Print its size in bytes.

public class Solution {
    public static int dataTypes(String type) {
        switch (type.toLowerCase()) {
            case "integer":
                return 4;
            case "long":
                return 8;
            case "float":
                return 4;
            case "double":
                return 8;
            case "character":
                return 1;
            default:
                System.out.println("Invalid data type");
                return -1; 
        }
    }

    public static void main(String[] args) {
          String dataType = "Integer";
        int size = dataTypes(dataType);
        if (size != -1) {
            System.out.println("Size of " + dataType + ": " + size + " bytes");
        }
    }
}


Q14) Programming languages have some conditional / decision-making statements that execute when some specific condition is fulfilled.
     If-else is one of the ways to implement them.You are given two numbers 'a' and 'b'.
    Compare the numbers and print the relation.
Print “smaller”, “greater” or “equal” when ‘a’ is smaller than ‘b’, greater than ‘b’, or equal to ‘b’ respectively.

    public class NumberComparison {
    public static String compareIfElse(int a, int b) {
        if (a > b) {
            return "greater";
        } else if (a < b) {
            return "smaller";
        } else {
            return "equal";
        }
    }

    public static void main(String[] args) {
        int numA = 5;
        int numB = 3;

        String result = compareIfElse(numA, numB);
        System.out.println(result);
    }
}

Q15) Programming languages have some conditional / decision-making statements that execute when some specific condition is fulfilled.
Switch-case is one of the ways to implement them.
In a menu-driven program, the user is given a set of choices of things to do (the menu) and then is asked to select a menu item.
There are 2 choices in the menu:
Choice 1 is to find the area of a circle having radius 'r'.
Choice 2 is to find the area of a rectangle having dimensions 'l' and 'b'.
You are given the choice 'ch' and an array 'a'.
If ‘ch’ is 1, ‘a’ contains a single number ‘r’. If ‘ch’ is 2, ‘a’ contains 2 numbers, ‘l’ and ‘b’.
Consider the choice and print the appropriate area.

public class AreaCalculator {
    public static double areaSwitchCase(int ch, double[] a) {
        switch (ch) {
            case 1:
                if (a.length >= 1) {
                    double radius = a[0];
                    return calculateCircleArea(radius);
                } else {
                    System.out.println("Invalid input for choice 1. Missing radius.");
                    return -1.0; 
                }
            case 2:
                if (a.length >= 2) {
                    double length = a[0];
                    double width = a[1];
                    return calculateRectangleArea(length, width);
                } else {
                    System.out.println("Invalid input for choice 2. Missing length or width.");
                    return -1.0;
                }
            default:
                System.out.println("Invalid choice. Please choose 1 or 2.");
                return -1.0;
        }
    }

    private static double calculateCircleArea(double radius) {
        return Math.PI * radius * radius;
    }

    private static double calculateRectangleArea(double length, double width) {
        return length * width;
    }
}

Q16) The n-th term of Fibonacci series F(n), where F(n) is a function, is calculated using the following formula :F(n) = F(n - 1) + F(n - 2), Where, F(1) = 1, F(2) = 1
        Provided 'n' you have to find out the n-th Fibonacci Number. Handle edges cases like when 'n' = 1 or 'n' = 2 by using conditionals like if else and return what's expected."Indexing is start from 1".


import java.util.Scanner;
public class Solution {
    public static void main(String[] args) {
       Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        scanner.close();
      long result = findNthFibonacciNumber(n);
      System.out.println(result);
    }
   
    public static long findNthFibonacciNumber(int n) {
       if (n == 1 || n == 2) {
            return 1;
        }
        long fibNMinus1 = 1;
        long fibNMinus2 = 1;
      for (int i = 3; i <= n; i++) {
            long currentFib = fibNMinus1 + fibNMinus2;
            fibNMinus2 = fibNMinus1;
            fibNMinus1 = currentFib;
        }
      return fibNMinus1;
    }
}

Q17) Write a program to input an integer 'n' and print the sum of all its even digits and the sum of all its odd digits separately.
     Digits mean numbers, not places! That is, if the given integer is "132456", even digits are 2, 4, and 6, and odd digits are 1, 3, and 5.

     import java.util.Scanner;
	public class Main {
	public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in); 
        int n = scanner.nextInt();
        scanner.close();
        int evenSum = 0;
        int oddSum = 0;
           while (n!= 0) {
            int digit = n % 10;
           if (digit % 2 == 0) {
         evenSum += digit;
            } else {
                oddSum += digit;
            }
          n /= 10;
        }
      System.out.println(evenSum + " " + oddSum);
       }
}

Q18) You are given a number ’n’.Find the number of digits of ‘n’ that evenly divide ‘n’.
      Note:A digit evenly divides ‘n’ if it leaves no remainder when dividing ‘n’.
  
  
    public static int countDigits(int n) {
         String numberAsString = Integer.toString(n);
       int count = 0;
       for (int i = 0; i < numberAsString.length(); i++) {
            int digit = Character.getNumericValue(numberAsString.charAt(i));
            if (digit != 0 && n % digit == 0) {
                count++;
            }
        }
      return count;
    }

    public static void main(String[] args) {
        int n = 12345;
        int result = countDigits(n);
        System.out.println("Number of digits that evenly divide 'n': " + result);
    }



Q19) There is a song concert going to happen in the city.
   The price of each ticket is equal to the number obtained after reversing the bits of a given 32 bits unsigned integer ‘n’.

  
    public static long reverseBits(long n) {
        long reversedBits = 0;
     for (int i = 0; i < 32; i++) {
            reversedBits <<= 1;
            reversedBits |= (n & 1);
            n >>= 1;
          return reversedBits;
    }
      public static void main(String[] args) {
         long n1 = 2;
        long n2 = 0;
        long n3 = 12;
        System.out.println("Reversed bits for " + n1 + ": " + reverseBits(n1));
        System.out.println("Reversed bits for " + n2 + ": " + reverseBits(n2));
        System.out.println("Reversed bits for " + n3 + ": " + reverseBits(n3));
    }
}


Q20) Given a signed 32-bit integer x, return x with its digits reversed. 
    If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.

  
    public static int reverse(int x) {
        int reversed = 0;
          while (x != 0) {
            int digit = x % 10;
      if (reversed > Integer.MAX_VALUE / 10 || (reversed == Integer.MAX_VALUE / 10 && digit > 7)) {
                return 0; 
            }
            if (reversed < Integer.MIN_VALUE / 10 || (reversed == Integer.MIN_VALUE / 10 && digit < -8)) {
                return 0; // Overflow occurred
            }
       reversed = reversed * 10 + digit;
            x /= 10;
        }
    return reversed;
    }

    public static void main(String[] args) {
        int x1 = 123;
        int x2 = -321;
        int x3 = 120;
        System.out.println("Reversed integer for " + x1 + ": " + reverse(x1));
        System.out.println("Reversed integer for " + x2 + ": " + reverse(x2));
        System.out.println("Reversed integer for " + x3 + ": " + reverse(x3));
    }


Q21) Check whether a given number ’n’ is a palindrome number.
   import java.util.Scanner;

   
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter a number 'n': ");
        int n = scanner.nextInt();
        scanner.close();
     boolean isPalindrome = isPalindrome(n);
      if (isPalindrome) {
            System.out.println(n + " is a palindrome number.");
        } else {
            System.out.println(n + " is not a palindrome number.");
        }
    }

  public static boolean isPalindrome(int n) {
        int originalNumber = n;
        int reversedNumber = 0;
        while (n > 0) {
            int digit = n % 10;
            reversedNumber = reversedNumber * 10 + digit;
            n /= 10;
        }
    return originalNumber == reversedNumber;
    }

Q22) You are given two integers 'n', and 'm'.Calculate 'gcd(n,m)', without using library functions.

    
public static int calcGCD(int n, int m) {
      n = Math.abs(n);
        m = Math.abs(m);
        while (m != 0) {
            int temp = m;
            m = n % m;
            n = temp;
        }
     return n;
    }
    
    public static void main(String[] args) {
         int n = 24;
        int m = 18;
       int gcd = calcGCD(n, m);
        System.out.println("GCD of " + n + " and " + m + " is: " + gcd);
    }
}

