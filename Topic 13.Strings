Q1) Take a input string from user and print it .
  
     public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String name = sc.next(); //this function is used only for a single word it doesn't contain the word after space
        System.out.println(name);
    }


Q2)Take a input string(two words or a line) from user and print it.

     public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String name = sc.nextLine();
        System.out.println(name);
    }


Q3)Find the length of the String by using length() function.
   
     public static void main(String[] args) {
        String fullName = "Kumari somya";
        System.out.println(fullName.length());
    }

Q4) Concatenate Strings and print it.
  
   public static void main(String[] args) {
        String firstName = "kumari";
        String lastName = "Somya";
        String fullName = firstName+" "+lastName;
        System.out.println(fullName);
    }

Q5) print the each character of the string by using charAt.

      public static void Printletters(String str) {
        for (int i=0; i<str.length();i++){
            System.out.print(str.charAt(i)+" ");
        }
        System.out.println();
    }


    public static void main(String[] args) {
        String firstName = "kumari";
        String lastName = "Somya";
        String fullName = firstName+" "+lastName;

        Printletters(fullName);
    }

Q6) Check if a String is a Palindrome.

    public static boolean isPalindrome(String str){
    for(int i=0;i<str.length()/2; i++){
        int n=str.length();
        if(str.charAt(i)!=str.charAt(n-1-i)){
          return false;
        }
    }
    return true;
   }

    public static void main(String[] args) {
        String str= "racecar";
        System.out.println(isPalindrome(str));
    }

Q7) Given a route containing 4 directions (E,W,N,S),find the shortest path to reach destination.
  
      public static float getShortestPath(String path) {
        int x = 0, y = 0;
        for (int i = 0; i < path.length(); i++) {
            char dir = path.charAt(i);
            //South
            if (dir == 'S') {
                y--;
            }
            //North
            else if (dir == 'N') {
                y++;
            }
            //West
            else if (dir == 'W') {
                x--;
            } else {
                x++;
            }
        }
        int x2 = x * x;
        int y2 = y * y;
        return (float) Math.sqrt(x2 + y2);
    }

        public static void main(String args[]) {
       String path ="WNEENESENNN";
            System.out.println(getShortestPath(path));
}

Q8) String Functions for comparison.
   public static void main(String[] args) {
    String s1="Tony";
    String s2="Tony";
    String s3=new String("Tony");
    if (s1.equals(s3)){
        System.out.println("Strings are equal");
    }else{
        System.out.println("strings are not equal");
    }
}
