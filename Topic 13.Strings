Q1) Take a input string from user and print it .
  
     public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String name = sc.next(); //this function is used only for a single word it doesn't contain the word after space
        System.out.println(name);
    }


Q2)Take a input string(two words or a line) from user and print it.

     public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String name = sc.nextLine();
        System.out.println(name);
    }


Q3)Find the length of the String by using length() function.
   
     public static void main(String[] args) {
        String fullName = "Kumari somya";
        System.out.println(fullName.length());
    }

Q4) Concatenate Strings and print it.
  
   public static void main(String[] args) {
        String firstName = "kumari";
        String lastName = "Somya";
        String fullName = firstName+" "+lastName;
        System.out.println(fullName);
    }

Q5) print the each character of the string by using charAt.

      public static void Printletters(String str) {
        for (int i=0; i<str.length();i++){
            System.out.print(str.charAt(i)+" ");
        }
        System.out.println();
    }


    public static void main(String[] args) {
        String firstName = "kumari";
        String lastName = "Somya";
        String fullName = firstName+" "+lastName;

        Printletters(fullName);
    }

Q6) Check if a String is a Palindrome.

    public static boolean isPalindrome(String str){
    for(int i=0;i<str.length()/2; i++){
        int n=str.length();
        if(str.charAt(i)!=str.charAt(n-1-i)){
          return false;
        }
    }
    return true;
   }

    public static void main(String[] args) {
        String str= "racecar";
        System.out.println(isPalindrome(str));
    }

Q7) Given a route containing 4 directions (E,W,N,S),find the shortest path to reach destination.
  
      public static float getShortestPath(String path) {
        int x = 0, y = 0;
        for (int i = 0; i < path.length(); i++) {
            char dir = path.charAt(i);
            //South
            if (dir == 'S') {
                y--;
            }
            //North
            else if (dir == 'N') {
                y++;
            }
            //West
            else if (dir == 'W') {
                x--;
            } else {
                x++;
            }
        }
        int x2 = x * x;
        int y2 = y * y;
        return (float) Math.sqrt(x2 + y2);
    }

        public static void main(String args[]) {
       String path ="WNEENESENNN";
            System.out.println(getShortestPath(path));
}

Q8) String Functions for comparison.
  
public static void main(String[] args) {
    String s1="Tony";
    String s2="Tony";
    String s3=new String("Tony");
    if (s1.equals(s3)){
        System.out.println("Strings are equal");
    }else{
        System.out.println("strings are not equal");
    }
}

Q9) print the substring of String "HelloWorld". 

  public static String subString(String str,int si,int ei){
        String substr ="";
        for(int i=si;i<ei;i++){
            substr += str.charAt(i);
        }
        return substr;
    }
  public static void main(String[] args) {
    String str ="HelloWorld";
    System.out.println(subString(str,0,5));
    }

Q10) print the substring using substring property of java.
   
   public static void main(String[] args) {
    String str=new String("Rs 1500");
    System.out.print("The original string is :");
    System.out.println(str);
    System.out.print("The extracted substring is: ");
    System.out.println(str.substring(3));
}

Q11) for a given set of Strings,print the largest String.
        "apple","mango","banana".
   
    public static void main(String[] args) {
        String fruits[] ={"apple" ,"mango", "banana"};

        String largest = fruits[0];
        for(int i=1;i<fruits.length;i++){
           if(largest.compareTo(fruits[i]) < 0){
               largest =fruits[i];

            }
        }
        System.out.println(largest);
    }

Q12) print the characters and there length using the StringBuilder property of Strings.
       public static void main(String[] args) {
        StringBuilder sb =new StringBuilder();
          for(char ch='a';ch<='z';ch++){
             sb.append(ch);
    }
      System.out.println(sb);
         System.out.println(sb.length());
    }

Q13) for a given String convert each the first letter of each word to uppercase.
      "hi i am somya".

public static String toUpperCase(String str){
        StringBuilder sb =new StringBuilder("");

        char ch=Character.toUpperCase(str.charAt(0));
        sb.append(ch);

        for(int i=1;i<str.length();i++){
            if (str.charAt(i) == ' ' && i<str.length()-1) {
                sb.append(str.charAt(i));
                i++;
                sb.append(Character.toUpperCase(str.charAt(i)));
            } else{
                sb.append(str.charAt(i));
            }
        }
        return sb.toString();
    }
public static void main(String[] args) {
    String str  ="hi, i am somya";
    System.out.println(toUpperCase(str));
}

Q14) String Compression.
   public static String compress(String str){
        String newStr ="";
        for(int i=0; i<str.length();i++){
            Integer count =1;
            while(i<str.length()-1 && str.charAt(i)== str.charAt(i+1)){
                count++;
                i++;
            }
            newStr +=str.charAt(i);
            if(count >1){
                newStr +=count.toString();
            }

        }
        return newStr;
    }
    public static void main(String[] args) {
        String str ="aaabbcccdd";
        System.out.println(compress(str));
    }

Q15) Print how many times lowercase vowels occured in a String entered by the user.
      public static void main(String[] args) {
            String str = new Scanner(System.in).next();
            int count = 0;
            for(int i=0; i<str.length(); i++) {
                char ch = str.charAt(i);
                if(ch == 'a' || ch == 'e' ||ch == 'i' || ch == 'o' ||ch == 'u') {
                    count++;
                }
            }
            System.out.println("count of vowels is :" + count);
        }
